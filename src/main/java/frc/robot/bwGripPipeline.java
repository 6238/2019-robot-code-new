package frc.robot;

import org.opencv.core.*;
import org.opencv.imgproc.*;

/**
 * GripPipeline class.
 *
 * <p>
 * An OpenCV pipeline generated by GRIP.
 *
 * @author GRIP
 */
public class bwGripPipeline {

	// Outputs
	private Mat desaturateOutput = new Mat();

	static {
		System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
	}

	/**
	 * This is the primary method that runs the entire pipeline and updates the
	 * outputs.
	 */
	public void process(Mat source0) {
		// Step Desaturate0:
		Mat desaturateInput = source0;
		desaturate(desaturateInput, desaturateOutput);

	}

	/**
	 * This method is a generated getter for the output of a Desaturate.
	 * 
	 * @return Mat output from Desaturate.
	 */
	public Mat desaturateOutput() {
		return desaturateOutput;
	}

	/**
	 * Converts a color image into shades of grey.
	 * 
	 * @param input  The image on which to perform the desaturate.
	 * @param output The image in which to store the output.
	 */
	private void desaturate(Mat input, Mat output) {
		switch (input.channels()) {
		case 1:
			// If the input is already one channel, it's already desaturated
			input.copyTo(output);
			break;
		case 3:
			Imgproc.cvtColor(input, output, Imgproc.COLOR_BGR2GRAY);
			break;
		case 4:
			Imgproc.cvtColor(input, output, Imgproc.COLOR_BGRA2GRAY);
			break;
		default:
			throw new IllegalArgumentException("Input to desaturate must have 1, 3, or 4 channels");
		}
	}

}
